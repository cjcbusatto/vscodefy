{"version":3,"sources":["../../src/commands/commands.js"],"names":["axios","post","spotifyUrl","headers","totalToken","PubSub","publish","console","log","next","previous","put","pause","play","commands","executeCommand","Uri","parse","data","signIn","token","prefix"],"mappings":";;;;;;;;qEAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEUA,gBACHC,IADG,CACKC,UADL,YACwB,EADxB,EAC4B;AAC9BC,uBAAS;AACP,iCAAiBC;AADV;AADqB,aAD5B,CAFV;;AAAA;AAQIC,+BAAOC,OAAP,CAAe,MAAf,EAAuB,IAAvB;AARJ;AAAA;;AAAA;AAAA;AAAA;;AAUIC,oBAAQC,GAAR;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,I;;;;;;sEAcf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEUT,gBACHC,IADG,CACKC,UADL,gBAC4B,EAD5B,EACgC;AAClCC,uBAAS;AACP,iCAAiBC;AADV;AADyB,aADhC,CAFV;;AAAA;AAQIC,+BAAOC,OAAP,CAAe,UAAf,EAA2B,IAA3B;AARJ;AAAA;;AAAA;AAAA;AAAA;;AAUIC,oBAAQC,GAAR;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeE,Q;;;;;;sEAcf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEUV,gBACHW,GADG,CACIT,UADJ,aACwB,EADxB,EAC4B;AAC9BC,uBAAS;AACP,iCAAiBC;AADV;AADqB,aAD5B,CAFV;;AAAA;AAQIC,+BAAOC,OAAP,CAAe,OAAf,EAAwB,IAAxB;AARJ;AAAA;;AAAA;AAAA;AAAA;;AAUIC,oBAAQC,GAAR;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeI,K;;;;;;sEAcf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEUZ,gBACHW,GADG,CACIT,UADJ,YACuB,EADvB,EAC2B;AAC7BC,uBAAS;AACP,iCAAiBC;AADV;AADoB,aAD3B,CAFV;;AAAA;AAQIC,+BAAOC,OAAP,CAAe,MAAf,EAAuB,IAAvB;AARJ;AAAA;;AAAA;AAAA;AAAA;;AAUIC,oBAAQC,GAAR;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeK,I;;;;;;sEAcf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACqBC,iBAASC,cAAT,CAAwB,aAAxB,EAAuCC,YAAIC,KAAJ,CAAU,8BAAV,CAAvC,CADrB;;AAAA;AACQC,gBADR;;AAEEX,oBAAQC,GAAR,CAAYU,IAAZ;AACAb,+BAAOC,OAAP,CAAe,QAAf,EAAyB,IAAzB;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAea,M;;;;;AAhEf;;AACA;;;;AACA;;;;;;;;AACA,IAAMC,QAAQ,sKAAd;AACA,IAAMC,SAAS,QAAf;AACA,IAAMjB,aAAgBiB,MAAhB,SAA0BD,KAAhC;AACA,IAAMlB,aAAa,sCAAnB;;QAiEEQ,Q,GAAAA,Q;QACAD,I,GAAAA,I;QACAG,K,GAAAA,K;QACAC,I,GAAAA,I;QACAM,M,GAAAA,M","file":"commands.js","sourcesContent":["import { commands, Uri } from 'vscode';\nimport axios from 'axios';\nimport PubSub from 'pubsub-js';\nconst token = 'BQCi7H5G_gWYBYP1-iJLtpaOWNeAWdXPqCTxtItro5YlEGytuP9Ywo3WOEpYP-R9rzdAmp4zd0Zi2Lpt1K9tp07SJvJT0yuHWHG4dRd1w0bSy_PJ_igcpKqEJF_QhymaE6p5W5h4TMU58OhOTH6oS-Z4inmDfPiNN-mM';\nconst prefix = 'Bearer';\nconst totalToken = `${prefix} ${token}`;\nconst spotifyUrl = 'https://api.spotify.com/v1/me/player';\n\nasync function next () {\n  try {\n    await axios\n      .post(`${spotifyUrl}/next`, {}, {\n        headers: {\n          'Authorization': totalToken\n        }\n      });\n    PubSub.publish('next', null);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nasync function previous () {\n  try {\n    await axios\n      .post(`${spotifyUrl}/previous`, {}, {\n        headers: {\n          'Authorization': totalToken\n        }\n      })\n    PubSub.publish('previous', null);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nasync function pause () {\n  try {\n    await axios\n      .put(`${spotifyUrl}/pause`, {}, {\n        headers: {\n          'Authorization': totalToken\n        }\n      })\n    PubSub.publish('pause', null)\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nasync function play () {\n  try {\n    await axios\n      .put(`${spotifyUrl}/play`, {}, {\n        headers: {\n          'Authorization': totalToken\n        }\n      })\n    PubSub.publish('play', null)\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nasync function signIn () {\n  const data = await commands.executeCommand('vscode.open', Uri.parse('https://vscodefy.netlify.com'))\n  console.log(data);\n  PubSub.publish('signIn', null)\n}\n\nexport {\n  previous,\n  next,\n  pause,\n  play,\n  signIn\n};\n"]}